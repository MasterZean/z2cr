// @test dup
// @file
/* @errors
test.z2(10, 5): error: duplicate symbol: def f()        [namespace test]
other occurrences at:
	test.z2(13, 6): func f()        [namespace test]
*/
namespace test;

def f() {
}

func f() {
}

// @test dup
// @file
/* @errors
test.z2(11, 5): error: duplicate symbol: def f(): Int        [namespace test]
other occurrences at:
	test.z2(14, 6): func f(): Double        [namespace test]
	test.z2(17, 6): func f(): Char        [namespace test]
*/
namespace test;

def f(): Int {
}

func f(): Double {
}

func f(): Char {
}

// @test dup
// @file
/* @errors
test.z2(13, 5): error: duplicate symbol: def f(): Int        [namespace test]
other occurrences at:
	test.z2(16, 6): func f(): Double        [namespace test]
	test.z2(21, 6): func f(): Char        [namespace test]
	test.z2(19, 5): val f        [namespace test]
	test.z2(24, 5): val f        [namespace test]
*/
namespace test;

def f(): Int {
}

func f(): Double {
}

val f = 0;

func f(): Char {
}

val f: Long  = 7000l;

// @test dup
// @file test1
/* @errors
test1.z2(13, 6): error: duplicate symbol: func f(Int)        [namespace test]
other occurrences at:
	test2.z2(4, 6): func f(Int)        [namespace test]
test1.z2(16, 6): error: duplicate symbol: func f(Double)        [namespace test]
other occurrences at:
	test2.z2(7, 6): func f(Double)        [namespace test]
*/
namespace test;

func f(a: Int) {
}

func f(a: Double) {
}

// @file test2
namespace test;

func f(a: Int) {
}

func f(a: Double) {
}

// @test dup
// @file test1
namespace test1;

func f(a: Int) {
}

func f(a: Double) {
}

// @file test2
namespace test2;

func f(a: Int) {
}

func f(a: Double) {
}

// @test dup
// @file test1
/* @errors
test1.z2(13, 14): error: duplicate symbol: func f(Int)        [namespace test]
other occurrences at:
	test2.z2(4, 14): func f(Int)        [namespace test]
test1.z2(16, 14): error: duplicate symbol: func f(Double)        [namespace test]
other occurrences at:
	test2.z2(7, 14): func f(Double)        [namespace test]
*/
namespace test;

private func f(a: Int) {
}

private func f(a: Double) {
}

// @file test2
namespace test;

private func f(a: Int) {
}

private func f(a: Double) {
}

// @test dup
// @file
/* @errors
test.z2(11, 5): error: duplicate symbol: val v        [namespace test]
other occurrences at:
	test.z2(12, 5): val v        [namespace test]
	test.z2(13, 5): val v        [namespace test]
*/
namespace test;

val v = 0;
val v = 0.7;
val v = '\n';