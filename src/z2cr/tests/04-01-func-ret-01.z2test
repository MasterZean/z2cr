// @test func_ret
// @file
namespace test;

/* @dumpBody
	return 0;
*/
func f(): Int {	
	return 0;
}

// @test func_ret
// @file
namespace test;

/* @dumpBody
	return 0;
*/
func f(): Int {	
	return 0;
}

// @test func_ret
// @file
namespace test;

val a = 0;

/* @dumpBody
	if (test::a > 7)
		return 0;
	return 0;
*/
func f(): Int {	
	if (a > 7)
		return 0;
	return 0;
}

// @test func_ret
// @file
namespace test;

val a = 0;

/* @dumpBody
	if (test::a > 7)
		;
	else
		return 0;
	return 0;
*/
func f(): Int {	
	if (a > 7)
		;
	else
		return 0;
	return 0;
}

// @test func_ret
// @file
namespace test;

val a = 0;

/* @dumpBody
	if (test::a > 7) {
	}
	else
		return 0;
	return 0;
*/
func f(): Int {	
	if (a > 7) {
	}
	else
		return 0;
	return 0;
}

// @test func_ret
// @file
namespace test;

val a = 0;

/* @dumpBody
	if (test::a > 7)
		return 7;
	else
		return 8;
*/
func f(): Int {	
	if (a > 7)
		return 7;
	else
		return 8;
}

// @test func_ret
// @file
namespace test;

val a = 56.7;
val b: Float;

/* @dumpBody
	while (test::a - test::b >= 0.00001)
		return 23;
	return 0;
*/
func f(): Int {	
	while (a - b >= 0.00001)
		return 23;
	return 0;
}

// @test func_ret
// @file
namespace test;

val a = 56.7;
val b: Float = 68;

/* @dumpBody
	do {
		test::a = test::a + 1;
		test::b = test::b - 1;
		return 23;
	} while (test::a - test::b >= 0.00001);
*/
func f(): Int {	
	do {
		a = a + 1;
		b = b - 1;
		return 23;
	} while (a - b >= 0.00001);
}